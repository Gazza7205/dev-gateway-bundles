<l7:Bundle xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management">
    <l7:References>
        <l7:Item>
            <l7:Name>Root Node</l7:Name>
            <l7:Id>0000000000000000ffffffffffffec76</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:Resource>
                <l7:Folder id="0000000000000000ffffffffffffec76">
                    <l7:Name>Root Node</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>dmz/</l7:Name>
            <l7:Id>31cb1b3b3050ba5e93855dd39c91504b</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:Resource>
                <l7:Folder folderId="0000000000000000ffffffffffffec76" id="31cb1b3b3050ba5e93855dd39c91504b">
                    <l7:Name>dmz</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>dmz/performance test</l7:Name>
            <l7:Id>31cb1b3b3050ba5e93855dd39c91504c</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:Resource>
                <l7:Service id="31cb1b3b3050ba5e93855dd39c91504c">
                    <l7:ServiceDetail folderId="31cb1b3b3050ba5e93855dd39c91504b" id="31cb1b3b3050ba5e93855dd39c91504c">
                        <l7:Name>performance test</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/perftest</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>DELETE</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;wsp:Policy xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy" xmlns:L7p="http://www.layer7tech.com/ws/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CustomizeErrorResponse&gt;
            &lt;L7p:Content stringValue="API Error: Policy Violation"/&gt;
            &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
        &lt;/L7p:CustomizeErrorResponse&gt;
        &lt;L7p:ComparisonAssertion&gt;
            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
            &lt;L7p:Expression1 stringValue="${request.http.header.foo}"/&gt;
            &lt;L7p:Operator operatorNull="null"/&gt;
            &lt;L7p:Predicates predicates="included"&gt;
                &lt;L7p:item dataType="included"&gt;
                    &lt;L7p:Type variableDataType="string"/&gt;
                &lt;/L7p:item&gt;
                &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="Foo"/&gt;
                &lt;/L7p:item&gt;
            &lt;/L7p:Predicates&gt;
        &lt;/L7p:ComparisonAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LnBlcmZ0ZXN0LnVybH0="/&gt;
            &lt;L7p:VariableToSet stringValue="perftestRoute"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.header.route}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="yes"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:CustomURLs stringArrayValue="included"&gt;
                        &lt;L7p:item stringValue="${perftestRoute}"/&gt;
                    &lt;/L7p:CustomURLs&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${perftestRoute}"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:HardcodedResponse&gt;
                &lt;L7p:Base64ResponseBody stringValue="T0s="/&gt;
                &lt;L7p:ResponseContentType stringValue="text/plain; charset=UTF-8"/&gt;
            &lt;/L7p:HardcodedResponse&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>dmz/OAuth Manager RP</l7:Name>
            <l7:Id>31cb1b3b3050ba5e93855dd39c91504d</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:Resource>
                <l7:Service id="31cb1b3b3050ba5e93855dd39c91504d">
                    <l7:ServiceDetail folderId="31cb1b3b3050ba5e93855dd39c91504b" id="31cb1b3b3050ba5e93855dd39c91504d">
                        <l7:Name>OAuth Manager RP</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/oauth/*</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>DELETE</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;wsp:Policy xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy" xmlns:L7p="http://www.layer7tech.com/ws/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:SslAssertion/&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybC5ob3N0fToke3JlcXVlc3QudXJsLnBvcnR9"/&gt;
                &lt;L7p:VariableToSet stringValue="requestHost"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="c3RzLWdhdGV3YXk6ODQ0Mw=="/&gt;
                &lt;L7p:VariableToSet stringValue="webRouteHost"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="c3RzLWdhdGV3YXk6NDQz"/&gt;
                &lt;L7p:VariableToSet stringValue="webAppHost"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="response.cookie.overwritePath"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="response.cookie.overwriteDomain"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybC5xdWVyeX0="/&gt;
                &lt;L7p:VariableToSet stringValue="query"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// CONSTANTS"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// REWRITE REQUEST QUERY"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="query"/&gt;
            &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
            &lt;L7p:Regex stringValue="${requestHost}"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="${webAppHost}"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// REWRITE REQUEST BODY"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
            &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
            &lt;L7p:Regex stringValue="${requestHost}"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="${webAppHost}"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:ManageCookie&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// REWRITE REQUEST COOKIE DOMAINS"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:CookieAttributes mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="domain"/&gt;
                    &lt;L7p:value nameValuePair="included"&gt;
                        &lt;L7p:Key stringValue="domain"/&gt;
                        &lt;L7p:Value stringValue="${webAppHost}"/&gt;
                    &lt;/L7p:value&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:CookieAttributes&gt;
            &lt;L7p:CookieCriteria mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="domain"/&gt;
                    &lt;L7p:value cookieCriteria="included"&gt;
                        &lt;L7p:Key stringValue="domain"/&gt;
                        &lt;L7p:Value stringValue="${request.url.host}"/&gt;
                    &lt;/L7p:value&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:CookieCriteria&gt;
            &lt;L7p:Operation operation="UPDATE"/&gt;
        &lt;/L7p:ManageCookie&gt;
        &lt;L7p:HttpRoutingAssertion&gt;
            &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
            &lt;L7p:ProtectedServiceUrl stringValue="https://${webRouteHost}${request.url.path}${query}"/&gt;
            &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
            &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
            &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                &lt;L7p:ForwardAll booleanValue="true"/&gt;
                &lt;L7p:Rules httpPassthroughRules="included"/&gt;
            &lt;/L7p:RequestHeaderRules&gt;
            &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                &lt;L7p:ForwardAll booleanValue="true"/&gt;
                &lt;L7p:Rules httpPassthroughRules="included"/&gt;
            &lt;/L7p:RequestParamRules&gt;
            &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                &lt;L7p:ForwardAll booleanValue="true"/&gt;
                &lt;L7p:Rules httpPassthroughRules="included"/&gt;
            &lt;/L7p:ResponseHeaderRules&gt;
        &lt;/L7p:HttpRoutingAssertion&gt;
        &lt;L7p:ManageCookie&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// REWRITE RESPONSE COOKIE DOMAINS"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:CookieAttributes mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="domain"/&gt;
                    &lt;L7p:value nameValuePair="included"&gt;
                        &lt;L7p:Key stringValue="domain"/&gt;
                        &lt;L7p:Value stringValue="${request.url.host}"/&gt;
                    &lt;/L7p:value&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:CookieAttributes&gt;
            &lt;L7p:CookieCriteria mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="domain"/&gt;
                    &lt;L7p:value cookieCriteria="included"&gt;
                        &lt;L7p:Key stringValue="domain"/&gt;
                        &lt;L7p:Value stringValue="${webAppHost}"/&gt;
                    &lt;/L7p:value&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:CookieCriteria&gt;
            &lt;L7p:Operation operation="UPDATE"/&gt;
            &lt;L7p:Target target="RESPONSE"/&gt;
        &lt;/L7p:ManageCookie&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${response.http.header.location}"/&gt;
                    &lt;L7p:ExpressionIsVariable booleanValue="false"/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXNwb25zZS5odHRwLmhlYWRlci5sb2NhdGlvbn0="/&gt;
                    &lt;L7p:VariableToSet stringValue="l7_tmp_header"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="l7_tmp_header"/&gt;
                    &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                    &lt;L7p:Regex stringValue="${webAppHost}"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${requestHost}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="location"/&gt;
                    &lt;L7p:HeaderValue stringValue="${l7_tmp_header}"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// REWRITE LOCATION HEADER"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// REWRITE RESPONSE BODY"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
            &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
            &lt;L7p:Regex stringValue="${webAppHost}"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="${requestHost}"/&gt;
            &lt;L7p:Target target="RESPONSE"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// REWRITE RESPONSE BODY"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
            &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
            &lt;L7p:Regex stringValue="${webRouteHost}"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="${requestHost}"/&gt;
            &lt;L7p:Target target="RESPONSE"/&gt;
        &lt;/L7p:Regex&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>dmz/Istio East West Demo App</l7:Name>
            <l7:Id>31cb1b3b3050ba5e93855dd39c91504e</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:Resource>
                <l7:Service id="31cb1b3b3050ba5e93855dd39c91504e">
                    <l7:ServiceDetail folderId="31cb1b3b3050ba5e93855dd39c91504b" id="31cb1b3b3050ba5e93855dd39c91504e">
                        <l7:Name>Istio East West Demo App</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/*</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>DELETE</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;wsp:Policy xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy" xmlns:L7p="http://www.layer7tech.com/ws/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LmRlbW8udXJsfQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="testUrl"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.uri}"/&gt;
                    &lt;L7p:Expression2 stringValue="/login"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="/login"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="x-custom-token"/&gt;
                    &lt;L7p:HeaderValue stringValue="abc"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="content-type"/&gt;
                    &lt;L7p:HeaderValue stringValue="application/json"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${testUrl}/login"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.uri}"/&gt;
                    &lt;L7p:Expression2 stringValue="/register"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="/register"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="x-custom-token"/&gt;
                    &lt;L7p:HeaderValue stringValue="abc"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="content-type"/&gt;
                    &lt;L7p:HeaderValue stringValue="application/json"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${testUrl}/register"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.uri}"/&gt;
                    &lt;L7p:Expression2 stringValue="/topic"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="/topic"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Expression2 stringValue="POST"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="POST"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:Enabled booleanValue="false"/&gt;
                    &lt;L7p:HeaderName stringValue="x-custom-token"/&gt;
                    &lt;L7p:HeaderValue stringValue="abc"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="content-type"/&gt;
                    &lt;L7p:HeaderValue stringValue="application/json"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${testUrl}/topic"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.uri}"/&gt;
                    &lt;L7p:Expression2 stringValue="/topic"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="/topic"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                    &lt;L7p:Expression2 stringValue="GET"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="GET"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="content-type"/&gt;
                    &lt;L7p:HeaderValue stringValue="application/json"/&gt;
                    &lt;L7p:RemoveExisting booleanValue="true"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${testUrl}/topic"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Cookie"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="SOAPAction"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                        &lt;L7p:ForwardAll booleanValue="true"/&gt;
                        &lt;L7p:Rules httpPassthroughRules="included"&gt;
                            &lt;L7p:item httpPassthroughRule="included"&gt;
                                &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                &lt;/L7p:HttpRoutingAssertion&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:HardcodedResponse&gt;
                &lt;L7p:Base64ResponseBody stringValue=""/&gt;
                &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
            &lt;/L7p:HardcodedResponse&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
    </l7:References>
    <l7:Mappings>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffec76" type="FOLDER"/>
        <l7:Mapping action="NewOrExisting" srcId="31cb1b3b3050ba5e93855dd39c91504b" type="FOLDER">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>path</l7:StringValue>
                </l7:Property>
                <l7:Property key="MapTo">
                    <l7:StringValue>dmz/</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrUpdate" srcId="31cb1b3b3050ba5e93855dd39c91504c" type="SERVICE">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>path</l7:StringValue>
                </l7:Property>
                <l7:Property key="MapTo">
                    <l7:StringValue>dmz/performance test</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrUpdate" srcId="31cb1b3b3050ba5e93855dd39c91504d" type="SERVICE">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>path</l7:StringValue>
                </l7:Property>
                <l7:Property key="MapTo">
                    <l7:StringValue>dmz/OAuth Manager RP</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrUpdate" srcId="31cb1b3b3050ba5e93855dd39c91504e" type="SERVICE">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>path</l7:StringValue>
                </l7:Property>
                <l7:Property key="MapTo">
                    <l7:StringValue>dmz/Istio East West Demo App</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
    </l7:Mappings>
</l7:Bundle>
